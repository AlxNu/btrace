plugins {
  id 'java'
  id("me.champeau.jmh") version "0.6.8"
}

description 'A JMH benchmark to assert the overhead imposed by various types of BTrace instrumentation.'

dependencies {
  implementation project(path: ":btrace-dist", configuration: "shadow")
  implementation project(":btrace-compiler")
  jmh project(":btrace-instr")
  jmh project(":btrace-runtime")
  jmh project(":btrace-statsd")
  jmh("org.openjdk.jmh:jmh-core:1.36")
  jmh("org.openjdk.jmh:jmh-generator-annprocess:1.36")
}

task btracec(type: JavaExec) {
  javaLauncher = java8
  group 'Build'
  inputs.files 'src/main/resources/scripts'
  outputs.dir "${buildDir}/classes/java/main"

  environment('BTRACE_HOME', "$projectDir")
  classpath configurations.implementation
  mainClass = "org.openjdk.btrace.compiler.Compiler"
  args '-d'
  args "${buildDir}/classes/java/main/"
  args '-packext'
  args 'btclass'
  args fileTree(dir: "src/jmh/btrace", include: 'TraceScript.java')
}
jmhClasses.dependsOn btracec

jmhJar {
  include 'META-INF/BenchmarkList'
  include 'META-INF/CompilerHints'
  include 'org/openjdk/jmh/**'
  include 'org/openjdk/btrace/bench/**/*.class'
  include 'org/openjdk/btrace/generated/**/*'
  include "joptsimple/**"
  include "org/apache/**"
  include 'jmh*'
  include 'benchmark/**'
  include '*.btclass'
}

jmh {
  warmupIterations = 5
  iterations = 10
  fork = 2
  jvm = java8
  duplicateClassesStrategy = DuplicatesStrategy.WARN
//  def agent = "-javaagent:${project.buildDir}/../../../btrace-dist/build/resources/main/${project.version}/libs/btrace-agent.jar=stdout=true,noServer=true,debug=true,script=${project.buildDir}/classes/java/main/TraceScript.btclass"
  def agentJar = project.buildDir.toPath().resolve('../../../btrace-dist/build/resources/main/' + project.version + '/libs/btrace-agent.jar').normalize()
  def agent = "-javaagent:${agentJar}=stdout=true,noServer=true,debug=true,script='${project.buildDir.toPath().resolve('classes/java/main/TraceScript.btclass')}"
  println(agent)
  jvmArgsAppend = ["\"-Djmh.basedir=${project.buildDir}/.. -Dproject.version=${project.version} -Xmx128m ${agent.toString()}\""]
  includes = ['.*BTraceBench.*']
}